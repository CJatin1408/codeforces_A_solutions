#include<stdio.h>
#include<map>
using namespace std;
const int maxn=1000005,mod=998244353;
int n,m,k;
int mul[maxn],flg[2];
map<int,int>mp[maxn];
struct solve{
	int tot[3],cnt[maxn][2];
	void modify(int x,int y,int z,int opt){
		tot[(cnt[x][0]==0)+(cnt[x][1]==0)]--,cnt[x][(y&1)^z]+=opt,tot[(cnt[x][0]==0)+(cnt[x][1]==0)]++;
	}
	void init(int n){
		tot[2]=n;
		for(int i=1;i<=n;i++)
			cnt[i][0]=cnt[i][1]=0;
	}
	int calc(){
		return tot[0]==0? mul[tot[2]]:0;
	}
}R,C;
int main(){
	scanf("%d%d%d",&n,&m,&k);
	mul[0]=1;
	for(int i=1;i<=max(n,m);i++)
		mul[i]=(mul[i-1]+mul[i-1])%mod;
	R.init(n),C.init(m);
	for(int i=1,x,y,z;i<=k;i++){
		scanf("%d%d%d",&x,&y,&z);
		if(mp[x].find(y)!=mp[x].end())
			flg[(x&1)^(y&1)^mp[x][y]]--,R.modify(x,y,mp[x][y],-1),C.modify(y,x,mp[x][y],-1),mp[x].erase(y);
		if(z!=-1)
			flg[(x&1)^(y&1)^z]++,R.modify(x,y,z,1),C.modify(y,x,z,1),mp[x][y]=z;
		printf("%d\n",((R.calc()+C.calc()-(flg[0]==0)-(flg[1]==0))%mod+mod)%mod);
	}
	return 0;
}
